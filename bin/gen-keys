#!/usr/bin/env node

const {
  createECDH,
  generateKeyPairSync,
  createPublicKey,
} = require("node:crypto");

const { publicKey, privateKey } = generateKeyPairSync("ec", {
  namedCurve: "P-256",
  publicKeyEncoding: { type: "spki", format: "pem" },
  privateKeyEncoding: { type: "sec1", format: "pem" },
});

function extractPublicKey(pemKey) {
  // convert the PEM formatted public key to raw public key in X9.62 uncompressed format
  // this is an oversimplified method and may not work with different curves or PEM formats
  const pem = pemKey.split("\n");
  pem.shift(); // remove the first line (BEGIN PUBLIC KEY)
  pem.pop(); // remove the last line (END PUBLIC KEY)
  // convert base64 to buffer
  const keyBuffer = Buffer.from(pem.join(""), "base64");
  // assuming the first 26 bytes are the header for the SPKI formatted key.
  // the actual key should begin after this header.
  const actualKeyBuffer = keyBuffer.slice(26);
  return actualKeyBuffer.toString("hex");
}
const hexPubKey = extractPublicKey(publicKey);

console.log(privateKey);
console.log(publicKey);
console.log("HEX pub key:");
console.log(hexPubKey);
