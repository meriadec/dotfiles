#!/bin/bash

# exit at first error
set -euo pipefail

function probe () {
  i=0
  echo "probing"
  while [[ "$(timeout 0.5 curl -k -s -o /dev/null -w "%{http_code}" "$1")" != "200" ]]; do
    if [[ $i -lt 100 ]]; then
      notify-send "$2" "$3" -t 1000 -h int:value:$i -i "$HOME/dotfiles/assets/icons/512x512/cog.png"
      sleep 0.5
      ((i=i+4))
    else
      notify-send -u critical "$2" "$3" -h int:value:100 -i "$HOME/dotfiles/assets/icons/512x512/cog.png"
      break
    fi
    if ! pgrep openvpn &>/dev/null; then
      notify-send -t 1 "$2" "$3" -h int:value:0 -i "$HOME/dotfiles/assets/icons/512x512/cog.png"
      return 1;
    fi
  done
  notify-send -t 1 "$2" "$3" -h int:value:100 -i "$HOME/dotfiles/assets/icons/512x512/cog.png"
}


VPN_ENABLED=$(pgrep -a 'openvpn$' &>/dev/null && echo "1" || echo "0")
VPN_VERB=$([[ "$VPN_ENABLED" = "1" ]] && echo "Stop" || echo "Start")

JIRA_COMMAND="JIRA ticket\0icon\x1fplexmediamanager"

# kubeContext=$(kubectl config current-context | cut -d '/' -f 2)

# SWITCH_COMMAND=""
# if [[ "$kubeContext" = "k3d-local" ]] && [[ "$VPN_ENABLED" = "1" ]]; then
#   SWITCH_COMMAND="Switch to sandbox\0icon\x1fsend-to"
# elif [[ "$kubeContext" = "sandbox-2042-cluster" ]]; then
#   SWITCH_COMMAND="Switch to local\0icon\x1fsend-to"
# fi

VPN_COMMAND="$VPN_VERB VPN\0icon\x1fpreferences-certificates"

choice=$(echo -e "\
$JIRA_COMMAND
$VPN_COMMAND
" \
  | awk 'NF' | rofi -i -dmenu -format s -theme-str "entry { placeholder: \" => \";}")

# Start VPN
# =========
if [[ "$choice" = "Start VPN" ]]; then
  kitty sudo -S openvpn --daemon --config ~/infra.ovpn --auth-user-pass ~/.gnome/rofi.conf

  echo "before probing"
  if probe https://remote.minivault.ledger-sbx.com "VPN starting..." "Chill out, it usually takes ~30s" ; then
    notify-send "VPN started" -u low -i "$HOME/dotfiles/assets/icons/512x512/guitar.png"
  else
    notify-send "VPN failed to start" "No idea for the reason, though" -u critical -i "$HOME/dotfiles/assets/icons/512x512/notification.png"
  fi

# Stop VPN
# ========
elif [[ "$choice" = "Stop VPN" ]]; then
  kitty sudo killall --signal 9 openvpn
  notify-send \
    "VPN Stopped" \
    -i "$HOME/dotfiles/assets/icons/512x512/guitar.png"

# JIRA ticket
# ===========
elif [[ "$choice" = "JIRA ticket" ]]; then
  issueTypeStr=$(printf "Story\0icon\x1fpencil\nBug\0icon\x1fpencil" | rofi -i -dmenu -format s -theme-str "entry { placeholder: \" => Issue type \";}")
  issueType=10001 # story
  if [[ "$issueTypeStr" = "Bug" ]]; then
    issueType=10004 # bug
  fi
  google-chrome-stable "https://ledgerhq.atlassian.net/secure/CreateIssueDetails!init.jspa?pid=10104&issuetype=${issueType}&summary=&customfield_10332=10932"
fi
