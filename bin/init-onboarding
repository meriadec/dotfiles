#!/bin/env bash

set -euo pipefail

# ------------------------------------------------------------
# CONFIGURATION
# ------------------------------------------------------------

# /!\ must not be > 6 chars
WORKSPACE_PREFIX="fake"

ENDPOINTS_OPTIONS=(
  "https://vault-qa.hsmsaas3.ledger-stg.com/qa/process"
  "https://ci.hsmsaas3-ci.ledger-stg.com/releases/0/process"
)

SCRIPTS_VERSION_OPTIONS=(
  "16.0.2-dave+31c88414"
  "15.0.2-dave+1ff700cd"
  "15.0.0-dave+6873e38a"
  "14.1.0-dave+59494f87"
)

# ------------------------------------------------------------

HSM_ENDPOINT=$(printf "%s\n" "${ENDPOINTS_OPTIONS[@]}" | fzf --height 5 --reverse --prompt "Select an HSM endpoint: ")
echo "✅ HSM endpoint: $HSM_ENDPOINT"
HSM_SCRIPTS_VERSION=$(printf "%s\n" "${SCRIPTS_VERSION_OPTIONS[@]}" | fzf --height 5 --reverse --prompt "Select HSM scripts version: ")
echo "✅ HSM scripts version: $HSM_SCRIPTS_VERSION"

echo "Creating CID..."

CID=$(docker run \
  -e VAULT_HSM_ENDPOINT=$HSM_ENDPOINT \
  -v $VAULT_HSM_CLIENT_CERT_PATH:/cert.p12 \
  -e VAULT_HSM_CLIENT_CERT_PATH=/cert.p12 \
  -e VAULT_HSM_CLIENT_CERT_PWD=$VAULT_HSM_CLIENT_CERT_PWD \
  ghcr.io/ledgerhq/vault-scripts/vault-scripts:1.2.4 \
  init | sed 's/Created compartment with options //g' | sed "s/'/\"/g" | jq -r '.id')

echo "Creating onboarding..."

ONBOARDING_ID=$(curl --silent -X POST \
  -H 'x-revault-root-token: stg-root-auth-token' \
  -H 'Content-Type: application/json' https://re.vault-qa.aws.stg.ldg-tech.com/v1/rest/onboarding \
  --data '{
    "workspaceName": "'"$WORKSPACE_PREFIX$(date +%s)"'",
     "compartmentId": '"$CID"',
     "hsmScriptsVersion": "'"$HSM_SCRIPTS_VERSION"'"
   }' | jq -r '.id')

echo "✅ Onboarding ID: $ONBOARDING_ID"
